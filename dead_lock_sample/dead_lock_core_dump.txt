(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ ./dead_lock_demo &
[1] 16532
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ about to dead_lock

(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ bg
-bash: bg: 任务 1 已在后台
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ ps -aux | grep dead_lock_demo
ejior    16532  0.0  0.0  97376  1616 pts/19   Sl   16:39   0:00 ./dead_lock_demo
ejior    16670  0.0  0.0  15984   940 pts/19   R+   16:40   0:00 grep --color=auto dead_lock_demo
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ kill -11 16532
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ ll
总用量 412
drwxrwxr-x 2 ejior ejior     4096 7月  21 16:40 ./
drwxrwxr-x 3 ejior ejior     4096 7月   7 18:02 ../
-rw------- 1 ejior ejior 17514496 7月  21 16:40 core-dead_lock_demo-16532-1595320819
-rwxr-xr-x 1 ejior ejior   143240 7月  21 16:39 dead_lock_demo*
[1]+  段错误               (核心已转储) ./dead_lock_demo
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ bg
-bash: bg: 当前: 无此任务
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$ gdb ./dead_lock_demo core-dead_lock_demo-16532-1595320819
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./dead_lock_demo...done.
[New LWP 16532]
[New LWP 16534]
[New LWP 16533]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `./dead_lock_demo'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x00007f74e72bf98d in pthread_join (threadid=140140064159488, thread_return=0x0) at pthread_join.c:90
90      pthread_join.c: 没有那个文件或目录.
[Current thread is 1 (Thread 0x7f74e7c64740 (LWP 16532))]
(gdb) thread apply all bt

Thread 3 (Thread 0x7f74e6be3700 (LWP 16533)):
#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135
#1  0x00007f74e72c0dbd in __GI___pthread_mutex_lock (mutex=0x605320 <m2>) at ../nptl/pthread_mutex_lock.c:80
#2  0x0000000000400ff7 in __gthread_mutex_lock (__mutex=0x605320 <m2>) at /usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:748
#3  0x0000000000401480 in std::mutex::lock (this=0x605320 <m2>) at /usr/include/c++/5/mutex:135
#4  0x00000000004010fd in func_1 () at dead_lock_core_dump.cpp:25
#5  0x0000000000402bcb in std::_Bind_simple<void (*())()>::_M_invoke<>(std::_Index_tuple<>) (this=0x81ac48) at /usr/include/c++/5/functional:1531
#6  0x0000000000402b24 in std::_Bind_simple<void (*())()>::operator()() (this=0x81ac48) at /usr/include/c++/5/functional:1520
#7  0x0000000000402ab4 in std::thread::_Impl<std::_Bind_simple<void (*())()> >::_M_run() (this=0x81ac30) at /usr/include/c++/5/thread:115
#8  0x00007f74e77a2c80 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#9  0x00007f74e72be6ba in start_thread (arg=0x7f74e6be3700) at pthread_create.c:333
#10 0x00007f74e6ff44dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109

Thread 2 (Thread 0x7f74e63e2700 (LWP 16534)):
#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135
#1  0x00007f74e72c0dbd in __GI___pthread_mutex_lock (mutex=0x6052e0 <m1>) at ../nptl/pthread_mutex_lock.c:80
#2  0x0000000000400ff7 in __gthread_mutex_lock (__mutex=0x6052e0 <m1>) at /usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:748
#3  0x0000000000401480 in std::mutex::lock (this=0x6052e0 <m1>) at /usr/include/c++/5/mutex:135
#4  0x00000000004010bb in func_2 () at dead_lock_core_dump.cpp:14
#5  0x0000000000402bcb in std::_Bind_simple<void (*())()>::_M_invoke<>(std::_Index_tuple<>) (this=0x81adb8) at /usr/include/c++/5/functional:1531
#6  0x0000000000402b24 in std::_Bind_simple<void (*())()>::operator()() (this=0x81adb8) at /usr/include/c++/5/functional:1520
#7  0x0000000000402ab4 in std::thread::_Impl<std::_Bind_simple<void (*())()> >::_M_run() (this=0x81ada0) at /usr/include/c++/5/thread:115
#8  0x00007f74e77a2c80 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#9  0x00007f74e72be6ba in start_thread (arg=0x7f74e63e2700) at pthread_create.c:333
#10 0x00007f74e6ff44dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109

Thread 1 (Thread 0x7f74e7c64740 (LWP 16532)):
#0  0x00007f74e72bf98d in pthread_join (threadid=140140064159488, thread_return=0x0) at pthread_join.c:90
#1  0x00007f74e77a2b97 in std::thread::join() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#2  0x000000000040115a in main () at dead_lock_core_dump.cpp:34
(gdb) q
(base) ejior@ejior-XPS-8930:~/huangyue2/cmd$